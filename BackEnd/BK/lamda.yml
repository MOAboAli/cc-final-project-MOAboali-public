AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation template to create an S3 bucket for a React project, 
  CloudFront distribution, two Lambda functions, and an API Gateway to connect them.

Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  # Lambda Function 1
  LambdaFunction1:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "Function1"
      Handler: "index.handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: "your-s3-bucket-name" # Replace with the actual S3 bucket name
        S3Key: "path/to/your/code1.zip" # Path to the code in S3
      Runtime: nodejs20.x
      Timeout: 10

  # Lambda Function 2
  LambdaFunction2:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "Function2"
      Handler: "index.handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: "your-s3-bucket-name" # Replace with the actual S3 bucket name
        S3Key: "path/to/your/code2.zip" # Path to the code in S3
      Runtime: nodejs20.x
      Timeout: 10

  # API Gateway
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ReactAppApi
      Description: "API for React App"

  # API Gateway Resource for Lambda Function 1
  ApiGatewayResource1:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: "function1"
      RestApiId: !Ref ApiGatewayRestApi

  # API Gateway Resource for Lambda Function 2
  ApiGatewayResource2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: "function2"
      RestApiId: !Ref ApiGatewayRestApi

  # API Gateway Method for Lambda Function 1
  ApiGatewayMethodFunction1:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayResource1
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction1.Arn}/invocations
          - { LambdaFunction1: !Ref LambdaFunction1 }

  # API Gateway Method for Lambda Function 2
  ApiGatewayMethodFunction2:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayResource2
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction2.Arn}/invocations
          - { LambdaFunction2: !Ref LambdaFunction2 }

  # Permission for Lambda Function 1 to be invoked by API Gateway
  LambdaInvokePermission1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction1
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/GET/function1"

  # Permission for Lambda Function 2 to be invoked by API Gateway
  LambdaInvokePermission2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction2
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/GET/function2"

Outputs:
  ApiUrl:
    Description: "API Gateway URL"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com"
